{
  "name": "remote-events",
  "version": "1.1.4",
  "description": "a two ended EventEmitter connected through a Stream",
  "homepage": "http://github.com/dominictarr/remote-events",
  "repository": {
    "type": "git",
    "url": "https://github.com/dominictarr/remote-events.git"
  },
  "dependencies": {
    "through": "~1.1.2",
    "stream-serializer": "0.0.3"
  },
  "devDependencies": {
    "assertions": "2"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "readme": "# RemoteEvents\n\nconnect two EventEmitters through a stream!\n\n``` js\nvar RemoteEventEmitter = require('..')\nvar net = require('net')\n\nvar server = net.createServer(function (con) {\n  var ree = new RemoteEventEmitter()\n  con.pipe(ree.getStream()).pipe(con)\n\n  ree.on('ping', function (time) {\n    console.log('PING', time)\n    ree.emit('pong', Date.now())\n  })\n}).listen(2468, function () {\n\n  var con = net.connect(2468)\n  var ree = new RemoteEventEmitter()\n  con.pipe(ree.getStream()).pipe(con)\n\n  var time = Date.now()\n  ree.on('pong', function (_time) {\n    console.log('PONG', _time, _time - time)\n    ree.disconnect()\n    server.close()\n  })\n  ree.emit('ping', time)\n})\n\n```\n\n## options\n\nYou can pass in `opts.wrap` to `RemoteEventEmitter` to set the\nwrapper function that should be used by [`stream-serializer`][1]\n\n  [1]: https://github.com/dominictarr/stream-serializer\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/dominictarr/remote-events/issues"
  },
  "_id": "remote-events@1.1.4",
  "_from": "remote-events@~1.1.4"
}
